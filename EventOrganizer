import java.util.Scanner;

public class EventOrganizer {
    private final EventCalendar eventCalendar;

    public EventOrganizer() {
        this.eventCalendar = new EventCalendar();
    }

    public void run() {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Enter a command: ");
            String input = scanner.nextLine().trim();
            if (input.equalsIgnoreCase("Q")) {
                break;
            }

            String[] userInputArray = input.split(" "); //gets all user inputs
            if (userInputArray.length < 1) {
                System.out.println("Invalid command. Please enter a valid command.");
                continue;
            }

            String token = userInputArray[0];
            String inputDate = null, timeOfTheDay = null, building = null, department = null, email = null, duration = null;

            if (userInputArray.length > 1) inputDate = userInputArray[1];
            if (userInputArray.length > 2) timeOfTheDay = userInputArray[2];
            if (userInputArray.length > 3) building = userInputArray[3];
            if (userInputArray.length > 4) department = userInputArray[4];
            if (userInputArray.length > 5) email = userInputArray[5];
            if (userInputArray.length > 6) duration = userInputArray[6];

            switch (token) {
                case "A":
                    Event event = CreateEvent(inputDate, timeOfTheDay, building, department, email, duration);
                    if (event != null) eventCalendar.add(event);
                    else System.out.println("Invalid event details. Event not added.");
                    break;
                case "R":
                    if (inputDate != null && timeOfTheDay != null && building != null) {
                        Date d = new Date(inputDate);
                        if (d.isValid()) {
                            Timeslot ts = Timeslot.valueOf(timeOfTheDay.toUpperCase());
                            Location l = Location.valueOf(building.toUpperCase());
                            eventCalendar.remove(new Event(d, ts, l));
                        } else System.out.println("Invalid date. Event not removed.");
                    } else System.out.println("Insufficient details provided. Event not removed.");
                    break;
                case "P":
                    eventCalendar.print();
                    break;
                case "PE":
                    eventCalendar.printByDate();
                    break;
                case "PC":
                    eventCalendar.printByCampus();
                    break;
                case "PD":
                    eventCalendar.printByDepartment();
                    break;
                default:
                    System.out.println("Invalid command. Please enter a valid command.");
            }
        }

        scanner.close();
    }

    public Event CreateEvent(String date, String timeOfTheDay, String building, String department, String email, String dur) {
        if (date == null || timeOfTheDay == null || building == null || department == null || email == null || dur == null) {
            System.out.println("Invalid event details provided.");
            return null;
        }

        Date d = new Date(date);
        if (!d.isValid()) {
            System.out.println("Invalid date provided.");
            return null;
        }

        Timeslot timeslot = Timeslot.valueOf(timeOfTheDay.toUpperCase());
        Location location = Location.valueOf(building.toUpperCase());
        Department department1 = Department.valueOf(department.toUpperCase());
        int duration = Integer.parseInt(dur);

        return new Event(d, timeslot, location, new Contact(department1, email), duration);
    }

    public static void main(String[] args) {
        new EventOrganizer().run();
    }
}
